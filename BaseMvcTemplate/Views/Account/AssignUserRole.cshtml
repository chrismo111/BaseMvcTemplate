@model BaseMvcTemplate.Models.UserRoleViewModel

@{
    ViewBag.Title = "Assign Users to Roles";
}

<h2>Assign Users to Roles</h2>


@using( Html.BeginForm( actionName: "AssignUserRole", controllerName: "Account", method: FormMethod.Post, htmlAttributes : new { encType = "multipart/form-data", name = "myForm" } ) ) {
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary( true, "", new { @class = "text-danger" } )
        @* Doesn't seem to do anything *@
        @Html.HiddenFor( model => model.RoleID )
        @Html.HiddenFor( model => model.RoleName )

        <div class="form-group">
            @Html.LabelFor( model => model.RoleName, htmlAttributes : new { @class = "control-label col-md-2", disabled="disabled" } )
            <div class="col-md-10">
                @Html.EditorFor( model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } } )
                @Html.ValidationMessageFor( model => model.RoleName, "", new { @class = "text-danger" } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( model => model.Users, htmlAttributes : new { @class = "control-label col-md-2" } )
            <div class="col-md-10">
                @Html.ListBoxFor( model => model.SelectedUsers, Model.Users as MultiSelectList, new { htmlAttributes = new { @class = "form-control",   } } )
                @Html.ValidationMessageFor( model => model.Users, "", new { @class = "text-danger" } )
                @if( ViewBag.UnSelectedMessage != null ) {
                    <br />
                    <div class="text-danger">@ViewBag.UnSelectedMessage</div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add User(s) To Role(s)" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListRoles")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
